{"version":3,"sources":["stopGraph/stopGraph.js","topoSort/topoSort.js","topoSort/index.js","stopGraph/sortedStopList.js","components/MareyDiagram/MareyDiagram.js","components/MareyDiagram/index.js"],"names":["buildStopGraph","theRtif","geographies","get","revenueTrips","Array","from","values","filter","trip","allEdges","_","uniqWith","flatMap","tripLocations","map","event","reverse","froms","tos","slice","zip","to","isEqual","allNodes","uniq","flatten","concat","node","data","id","label","source","target","topoSort","nodes","this","edges","edge","toposort","array","register","cytoscape","impl","Cytoscape","use","buildSortedStopList","elements","headless","pristineLocale","Plotly","d3","locale","colorForTrip","line","trimEnd","routeColors","result","pristineNumberFormat","numberFormat","format","x","formatTime","MareyDiagram","rtif","counts","countBy","stop","formatLocation","namer","sortedStopList","location","sortBy","tripEvents","type","mode","name","color","y","meta","direction","applicabilityShapes","applicability","includes","yIndex","indexOf","layer","xref","yref","x0","y0","x1","y1","opacity","dash","width","buildApplicabilityShapes","reliefAnnotations","theTrip","text","hovertext","ax","ay","textangle","buildReliefAnnotations","buildSeriesVisibility","states","entities","indices","forEach","entity","index","entityDirection","push","filterSeriesVisibility","visible","layout","autosize","dragmode","hovermode","hoverlabel","namelength","title","formatTimetableName","xaxis","tickformat","yaxis","categoryorder","categoryarray","automargin","margin","t","l","b","r","font","family","shapes","annotations","updatemenus","buttons","method","args","N","S","active","annotation","shape","grow","paddingSize","restrictWidth","gutterSize","config","responsive","scrollZoom","style","height","useresizehandler"],"mappings":"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","file":"static/js/427.7eb17e37.chunk.js","sourcesContent":["import _ from \"lodash\";\n\n//TODO: per-direction graphs\nfunction buildStopGraph(theRtif) {\n  const geographies = theRtif.get(\"geography\");\n  const revenueTrips = Array.from(theRtif.get(\"trip\").values()).filter(\n    (trip) => trip.get(\"tripType\") === 1\n  );\n\n  const allEdges = _.uniqWith(\n    revenueTrips.flatMap((trip) => {\n      const events = trip.get(\"event\");\n\n      const tripLocations = events.map((event) => event.get(\"location\"));\n\n      if (trip.get(\"direction\") !== \"S\") {\n        _.reverse(tripLocations);\n      }\n\n      const froms = tripLocations;\n      const tos = _.slice(tripLocations, 1);\n\n      return _.zip(froms, tos).filter(\n        ([from, to]) => !!from && !!to && from !== to\n      );\n    }),\n    _.isEqual\n  );\n\n  const allNodes = _.uniq(_.flatten(allEdges));\n\n  return _.concat(\n    allNodes.map((node) => ({\n      data: { id: node, label: geographies.get(node).get(\"shortName\") },\n    })),\n    allEdges.map(([from, to]) => ({ data: { source: from, target: to } }))\n  );\n}\n\nexport default buildStopGraph;\n","import toposort from \"toposort\";\n\nfunction topoSort() {\n  const eles = this;\n\n  const nodes = eles.nodes().map((node) => node.id());\n  const edges = eles\n    .edges()\n    .map((edge) => [edge.source().id(), edge.target().id()]);\n\n  return toposort.array(nodes, edges);\n}\n\nexport default topoSort;\n","import impl from \"./topoSort\";\n\nconst register = function (cytoscape) {\n  if (!cytoscape) {\n    return;\n  }\n\n  cytoscape(\"collection\", \"topoSort\", impl);\n};\n\nexport default register;\n","import Cytoscape from \"cytoscape\";\n\nimport topoSort from \"../topoSort\";\nimport buildStopGraph from \"./stopGraph\";\n\nCytoscape.use(topoSort);\n\nfunction buildSortedStopList(theRtif) {\n  const cy = Cytoscape({\n    elements: buildStopGraph(theRtif),\n    headless: true,\n  });\n\n  return cy.elements().topoSort();\n}\n\nexport default buildSortedStopList;\n","import React from \"react\";\n\nimport { EuiFlexGroup, EuiFlexItem, EuiPageTemplate } from \"@elastic/eui\";\nimport Plotly from \"plotly.js/dist/plotly\";\nimport Plot from \"react-plotly.js\";\nimport _ from \"lodash\";\n\nimport {\n  formatLocation,\n  formatTime,\n  formatTimetableName,\n  routeColors,\n} from \"../../parser\";\nimport { buildSortedStopList } from \"../../stopGraph\";\n\n//This is awful and ugly and also unavoidable: https://github.com/plotly/plotly.js/issues/1464\nconst pristineLocale = Plotly.d3.locale;\nPlotly.d3.locale = (locale) => {\n  const result = pristineLocale(locale);\n  const pristineNumberFormat = result.numberFormat;\n  result.numberFormat = (format) => {\n    switch (format) {\n      case \"rtifTime\":\n        return (x) => formatTime(x);\n      default:\n        return pristineNumberFormat(format);\n    }\n  };\n  return result;\n};\n\nfunction buildApplicabilityShapes(theRtif, sortedStopList, namer) {\n  return theRtif\n    .get(\"applicability\")\n    .get(\"periods\")\n    .filter((applicability) =>\n      _.includes(sortedStopList, namer(applicability.get(\"locationName\")))\n    )\n    .map((applicability) => {\n      const yIndex = _.indexOf(\n        sortedStopList,\n        namer(applicability.get(\"locationName\"))\n      );\n\n      return {\n        type: \"line\",\n        layer: \"below\",\n        xref: \"x\",\n        yref: \"y\",\n        x0: applicability.get(\"startingTime\"),\n        y0: yIndex,\n        x1: applicability.get(\"endingTime\"),\n        y1: yIndex,\n        opacity: 0.5,\n        line: {\n          color: \"gray\",\n          dash: \"solid\",\n          width: 5,\n        },\n        meta: {\n          direction: applicability.get(\"direction\"),\n        },\n      };\n    });\n}\n\nfunction tripHasRelief(trip) {\n  return (\n    trip.get(\"reliefWorkProgramId\") != null &&\n    trip.get(\"reliefRunNumber\") != null &&\n    trip.get(\"reliefLocation\") != null &&\n    trip.get(\"reliefDepartureTime\") != null\n  );\n}\n\nfunction buildReliefAnnotations(revenueTrips, sortedStopList, namer) {\n  return revenueTrips\n    .filter((theTrip) => tripHasRelief(theTrip))\n    .map((theTrip) => {\n      const yIndex = _.indexOf(\n        sortedStopList,\n        namer(theTrip.get(\"reliefLocation\"))\n      );\n\n      return {\n        text: theTrip.get(\"reliefRunNumber\"),\n        hovertext: `${theTrip.get(\"tripName\")} relieved by ${theTrip.get(\n          \"reliefWorkProgramId\"\n        )} run ${theTrip.get(\"reliefRunNumber\")}`,\n        xref: \"x\",\n        yref: \"y\",\n        x: theTrip.get(\"reliefDepartureTime\"),\n        y: yIndex,\n        ax: -30,\n        ay: -30,\n        textangle: 45,\n        meta: {\n          direction: theTrip.get(\"direction\"),\n        },\n      };\n    });\n}\n\nfunction colorForTrip(trip, theRtif) {\n  const line = _.trimEnd(\n    trip.get(\"tripLine\") || theRtif.get(\"timetable\").get(\"lineIdentifier\"),\n    \"X\"\n  );\n\n  return \"#\" + (routeColors.get(line) || \"0039A6\");\n}\n\nfunction MareyDiagram({ rtif: theRtif }) {\n  const geographies = theRtif.get(\"geography\");\n\n  const counts = _.countBy(Array.from(geographies.values()), (stop) =>\n    formatLocation(stop.get(\"locationName\"), geographies)\n  );\n\n  function namer(stop) {\n    return (\n      formatLocation(stop, geographies) +\n      (counts[formatLocation(stop, geographies)] > 1 ? ` (${stop})` : \"\")\n    );\n  }\n\n  const sortedStopList = _.reverse(\n    buildSortedStopList(theRtif).map((location) => {\n      return namer(location);\n    })\n  );\n\n  const revenueTrips = _.sortBy(\n    Array.from(theRtif.get(\"trip\").values()).filter(\n      (trip) => trip.get(\"tripType\") === 1\n    ),\n    (trip) => trip.get(\"originTime\")\n  );\n\n  const data = revenueTrips.map((trip) => {\n    const tripEvents = trip.get(\"event\");\n    return {\n      type: \"scattergl\",\n      mode: \"lines+markers\",\n      name: trip.get(\"tripName\"),\n      line: {\n        color: colorForTrip(trip, theRtif),\n      },\n      x: tripEvents.map((event) => event.get(\"eventTime\")), //times\n      y: tripEvents.map((event) => namer(event.get(\"location\"))), //stops\n      meta: {\n        direction: trip.get(\"direction\"),\n      },\n    };\n  });\n\n  const applicabilityShapes = buildApplicabilityShapes(\n    theRtif,\n    sortedStopList,\n    namer\n  );\n\n  const reliefAnnotations = buildReliefAnnotations(\n    revenueTrips,\n    sortedStopList,\n    namer\n  );\n\n  function filterSeriesVisibility(entities, states) {\n    const values = [];\n    const indices = [];\n\n    entities.forEach((entity, index) => {\n      const entityDirection = entity.meta.direction;\n\n      if (entityDirection in states) {\n        values.push(states[entityDirection]);\n        indices.push(index);\n      }\n    });\n\n    return [values, indices];\n  }\n\n  function buildSeriesVisibility(states) {\n    const [values, indices] = filterSeriesVisibility(data, states);\n    return [{ visible: values }, {}, indices];\n  }\n\n  const layout = {\n    autosize: true,\n    dragmode: \"pan\",\n    hovermode: \"closest\",\n    hoverlabel: { namelength: -1 },\n    title: formatTimetableName(theRtif.get(\"timetable\")),\n    xaxis: {\n      type: \"linear\",\n      tickformat: \"rtifTime\",\n    },\n    yaxis: {\n      type: \"category\",\n      categoryorder: \"array\",\n      categoryarray: sortedStopList,\n      automargin: true,\n    },\n    margin: { t: 20, l: 20, b: 20, r: 20 },\n    font: {\n      family:\n        '\"Inter\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n    },\n    shapes: [],\n    annotations: reliefAnnotations,\n    updatemenus: [\n      {\n        type: \"dropdown\",\n        direction: \"down\",\n        x: 0.1,\n        y: 1.1,\n        buttons: [\n          {\n            method: \"update\",\n            label: \"All Trips\",\n            args: buildSeriesVisibility({ N: true, S: true }),\n          },\n          {\n            method: \"update\",\n            label: \"Northbound Trips\",\n            args: buildSeriesVisibility({ N: true, S: false }),\n          },\n          {\n            method: \"update\",\n            label: \"Southbound Trips\",\n            args: buildSeriesVisibility({ N: false, S: true }),\n          },\n          {\n            method: \"update\",\n            label: \"No Trips\",\n            args: buildSeriesVisibility({ N: false, S: false }),\n          },\n        ],\n      },\n      {\n        type: \"dropdown\",\n        direction: \"down\",\n        x: 0.25,\n        y: 1.1,\n        active: 0,\n        buttons: [\n          {\n            method: \"update\",\n            label: \"All Relief\",\n            args: [{}, { annotations: reliefAnnotations }],\n          },\n          {\n            method: \"update\",\n            label: \"Northbound Relief\",\n            args: [\n              {},\n              {\n                annotations: reliefAnnotations.filter(\n                  (annotation) => annotation.meta.direction === \"N\"\n                ),\n              },\n            ],\n          },\n          {\n            method: \"update\",\n            label: \"Southbound Relief\",\n            args: [\n              {},\n              {\n                annotations: reliefAnnotations.filter(\n                  (annotation) => annotation.meta.direction === \"S\"\n                ),\n              },\n            ],\n          },\n          {\n            method: \"update\",\n            label: \"No Relief\",\n            args: [{}, { annotations: [] }],\n          },\n        ],\n      },\n      {\n        type: \"dropdown\",\n        direction: \"down\",\n        x: 0.43,\n        y: 1.1,\n        active: 3,\n        buttons: [\n          {\n            method: \"update\",\n            label: \"All Applicability\",\n            args: [{}, { shapes: applicabilityShapes }],\n          },\n          {\n            method: \"update\",\n            label: \"Northbound Applicability\",\n            args: [\n              {},\n              {\n                shapes: applicabilityShapes.filter(\n                  (shape) => shape.meta.direction === \"N\"\n                ),\n              },\n            ],\n          },\n          {\n            method: \"update\",\n            label: \"Southbound Applicability\",\n            args: [\n              {},\n              {\n                shapes: applicabilityShapes.filter(\n                  (shape) => shape.meta.direction === \"S\"\n                ),\n              },\n            ],\n          },\n          {\n            method: \"update\",\n            label: \"No Applicability\",\n            args: [{}, { shapes: [] }],\n          },\n        ],\n      },\n    ],\n  };\n\n  return (\n    <EuiPageTemplate\n      grow={true}\n      direction={\"row\"}\n      paddingSize={\"s\"}\n      restrictWidth={false}\n    >\n      <EuiFlexGroup direction=\"column\" gutterSize={\"none\"}>\n        <EuiFlexItem>\n          <Plot\n            data={data}\n            layout={layout}\n            config={{ responsive: true, scrollZoom: true }}\n            style={{ height: \"100%\", width: \"100%\" }}\n            useresizehandler={true}\n          />\n        </EuiFlexItem>\n      </EuiFlexGroup>\n    </EuiPageTemplate>\n  );\n}\n\nexport default MareyDiagram;\n","import MareyDiagram from \"./MareyDiagram\";\n\nexport default MareyDiagram;\n"],"sourceRoot":""}